{"ast":null,"code":"var _jsxFileName = \"G:\\\\TwitterCopy\\\\twitter - Kopie\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport queryString from \"query-string\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst Chat = () => {\n  _s();\n  const username = 'woodly';\n  const [chats, setChats] = useState([]);\n  const ENDPOINT = 'http://localhost:5000';\n  const getChats = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/loadePrivateUserChats', {\n        username: username\n      });\n      const loadedChats = response.data;\n\n      // Hier nach dem Setzen der Chats die Verbindung herstellen\n      socket = io(ENDPOINT);\n\n      // Warte, bis die Chats geladen wurden, und wähle die erste ChatID aus\n      const firstChatID = loadedChats.length > 0 ? loadedChats[0].ChatID : null;\n      socket.emit('join', {\n        username,\n        ChatID: firstChatID\n      });\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        // Hier kannst du auf die Trennung reagieren, z.B. den Benutzer benachrichtigen.\n      });\n\n      // Setze die geladenen Chats im State\n      setChats(loadedChats);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", chat.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ChatID: \", chat.ChatID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, chat.ChatID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"lMBAsrelRJo6AOSQTdeGugpVri0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","axios","queryString","io","jsxDEV","_jsxDEV","socket","Chat","_s","username","chats","setChats","ENDPOINT","getChats","response","post","loadedChats","data","firstChatID","length","ChatID","emit","on","console","log","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","_c","$RefreshReg$"],"sources":["G:/TwitterCopy/twitter - Kopie/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport queryString from \"query-string\";\r\nimport io  from 'socket.io-client';\r\n\r\nlet socket;\r\nconst Chat = () => {\r\n    const username = 'woodly'\r\n    const [chats, setChats] = useState([]);  \r\n    const ENDPOINT = 'http://localhost:5000';\r\n\r\n\r\n    const getChats = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/loadePrivateUserChats', { username: username });\r\n            const loadedChats = response.data;\r\n    \r\n            // Hier nach dem Setzen der Chats die Verbindung herstellen\r\n            socket = io(ENDPOINT);\r\n    \r\n            // Warte, bis die Chats geladen wurden, und wähle die erste ChatID aus\r\n            const firstChatID = loadedChats.length > 0 ? loadedChats[0].ChatID : null;\r\n    \r\n            socket.emit('join', { username, ChatID: firstChatID });\r\n    \r\n            socket.on('disconnect', () => {\r\n                console.log('Disconnected from server');\r\n                // Hier kannst du auf die Trennung reagieren, z.B. den Benutzer benachrichtigen.\r\n            });\r\n    \r\n            // Setze die geladenen Chats im State\r\n            setChats(loadedChats);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Hello Chat</h1>\r\n            {chats.map(chat => (\r\n                <div key={chat.ChatID}>\r\n                    <p>Username: {chat.username}</p>\r\n                    <p>ChatID: {chat.ChatID}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,EAAE,MAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,IAAIC,MAAM;AACV,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAG,QAAQ;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAG,uBAAuB;EAGxC,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,6CAA6C,EAAE;QAAEN,QAAQ,EAAEA;MAAS,CAAC,CAAC;MACxG,MAAMO,WAAW,GAAGF,QAAQ,CAACG,IAAI;;MAEjC;MACAX,MAAM,GAAGH,EAAE,CAACS,QAAQ,CAAC;;MAErB;MACA,MAAMM,WAAW,GAAGF,WAAW,CAACG,MAAM,GAAG,CAAC,GAAGH,WAAW,CAAC,CAAC,CAAC,CAACI,MAAM,GAAG,IAAI;MAEzEd,MAAM,CAACe,IAAI,CAAC,MAAM,EAAE;QAAEZ,QAAQ;QAAEW,MAAM,EAAEF;MAAY,CAAC,CAAC;MAEtDZ,MAAM,CAACgB,EAAE,CAAC,YAAY,EAAE,MAAM;QAC1BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;MACJ,CAAC,CAAC;;MAEF;MACAb,QAAQ,CAACK,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACtB;EACJ,CAAC;EAGD,oBACIpB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBrB,KAAK,CAACsB,GAAG,CAACC,IAAI,iBACX5B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,GAAG,YAAU,EAACM,IAAI,CAACxB,QAAQ;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC1B,OAAA;QAAAsB,QAAA,GAAG,UAAQ,EAACM,IAAI,CAACb,MAAM;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFtBE,IAAI,CAACb,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAvB,EAAA,CA3CKD,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}